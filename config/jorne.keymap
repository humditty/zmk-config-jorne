/*
 * Copyright (c) 2020 The ZMK Contributors
 *1
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&spi1 {
    compatible = "nordic,nrf-spim";

    /* Cannot be used together with i2c0. */

    status = "okay";
    mosi-pin = <6>;

    // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.

    sck-pin = <5>;
    miso-pin = <7>;

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */

        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */

        chain-length = <6>; /* There are per-key RGB, but the first 6 are underglow */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_left {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp LEFT>;
        };

        right {
            bindings = <&kp RIGHT_ARROW>;
            key-positions = <17 18>;
            timeout-ms = <50>;
        };

        upup {
            bindings = <&kp UP_ARROW>;
            key-positions = <17 4>;
            timeout-ms = <50>;
        };

        downd {
            bindings = <&kp DOWN_ARROW>;
            key-positions = <17 29>;
            timeout-ms = <50>;
        };

        deldel {
            bindings = <&kp DEL>;
            key-positions = <15 14>;
            timeout-ms = <50>;
        };
    };
};

/ {
    chosen { zmk,underglow = &led_strip; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&mt LALT LEFT  &kp ESC        &kp Q  &kp W  &kp E    &kp R      &kp T         &kp Y         &kp U         &kp I         &kp O    &kp P     &kp BSPC        &kp RIGHT
               &mt LCTRL TAB  &kp A  &kp S  &kp D    &kp F      &kp G         &kp H         &kp J         &kp K         &kp L    &kp SEMI  &mt RCTRL SQT
               &kp LSHFT      &kp Z  &kp X  &kp C    &kp V      &kp B         &kp N         &kp M         &kp COMMA     &kp DOT  &kp FSLH  &mt RSHFT BSLH
                                            &mo RSE  &kp SPACE  &mt LWIN RET  &mt RWIN RET  &lt LWR BSPC  &mt RALT DEL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  ~  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  -_ |  =+ |
            //       | -_  |  4  |  5  |  6  |  .  |     |   |  ^  |  &  |  *  |  (  |  )  |  =+ |
            //       |  F1 |  7  |  8  |  9  |  0  |  F6 |   |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //                         | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp GRAVE   &kp N1  &kp N2  &kp N3       &kp N4      &kp N5     &kp N6     &kp N7    &kp N8       &kp N9    &kp N0    &kp MINUS  &kp EQUAL
       &kp CAPS    &kp N4  &kp N5  &kp N6       &kp KP_DOT  &kp PRCNT  &kp CARET  &kp LBKT  &kp RBKT     &kp LPAR  &kp RPAR  &kp EQUAL
       &kp LSHIFT  &kp N7  &kp N8  &kp N9       &kp N0      &kp F6     &kp F7     &kp F8    &kp F9       &kp F10   &kp F11   &kp F12
                                   &lt ADJ TAB  &trans      &trans     &trans     &trans    &lt ADJ DEL
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  F1  |  F2 |  F3 |  F4 |  F5 |  F6 |   |  F7 |  F8 |  F9 | F10 | F11 | F12 |     |
            //       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
            //       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
            //                          |     |     | ADJ |   | ADJ |     |     |

            bindings = <
&trans  &kp F1          &kp F2      &kp F3      &kp F4      &kp F5      &kp F6       &kp F7       &kp F8    &kp F9    &kp F10    &kp F11          &kp F12          &trans
        &kp LG(LS(N4))  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N4)  &kp LG(N5)   &kp C_MUTE   &kp LEFT  &kp UP    &kp RIGHT  &kp INS          &mt RCTRL K_APP
        &trans          &kp N1      &kp N2      &kp N3      &kp N4      &kp N5       &trans       &kp END   &kp DOWN  &kp PG_DN  &kp PAUSE_BREAK  &trans
                                                &trans      &trans      &lt ADJ RET  &lt ADJ ESC  &trans    &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RST | BLDR | HI  | SI  | BI  | PI  | EF  |   |     |     |     |     |     | BLDR | RST |
            //       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //       |      | HD  | SD  | BD  | PD  | ER  |   |     |     |     |     |     |      |
            //                          |     | RGB |     |   |     |     | OUT |

            bindings = <
&sys_reset  &bootloader  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &none         &none         &none         &none         &none         &bootloader  &sys_reset
            &bt BT_CLR   &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
            &none        &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &none         &none         &none         &none         &none         &none
                                                           &trans           &rgb_ug RGB_TOG  &trans           &trans        &trans        &out OUT_TOG
            >;
        };
    };
};
